diff --git a/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksAppDelegateInterceptor.h b/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksAppDelegateInterceptor.h
index df28359..c516e03 100644
--- a/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksAppDelegateInterceptor.h
+++ b/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksAppDelegateInterceptor.h
@@ -27,10 +27,10 @@ static NSString *const LINK_RECEIVED_EVENT = @"dynamic_links_link_received";
 @interface RNFBDynamicLinksAppDelegateInterceptor : NSObject <UIApplicationDelegate>
 @property (strong, readwrite) NSString *_Nullable initialLinkUrl;
 @property (strong, readwrite) NSString *_Nullable initialLinkMinimumAppVersion;
+@property (strong, readwrite) NSNumber *_Nullable initialLinkMatchType;
 
 + (instancetype)sharedInstance;
 
-
 @end
 
 NS_ASSUME_NONNULL_END
diff --git a/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksAppDelegateInterceptor.m b/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksAppDelegateInterceptor.m
index e79fde1..333b994 100644
--- a/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksAppDelegateInterceptor.m
+++ b/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksAppDelegateInterceptor.m
@@ -28,6 +28,7 @@
     sharedInstance = [[RNFBDynamicLinksAppDelegateInterceptor alloc] init];
     sharedInstance.initialLinkUrl = nil;
     sharedInstance.initialLinkMinimumAppVersion = nil;
+    sharedInstance.initialLinkMatchType = nil;
     [GULAppDelegateSwizzler proxyOriginalDelegate];
     [GULAppDelegateSwizzler registerAppDelegateInterceptor:sharedInstance];
   });
@@ -64,10 +65,12 @@
     if (_initialLinkUrl == nil) {
       _initialLinkUrl = dynamicLink.url.absoluteString;
       _initialLinkMinimumAppVersion = dynamicLink.minimumAppVersion;
+      _initialLinkMatchType = [[self class] numberWithMatchType:dynamicLink.matchType];
     }
     [[RNFBRCTEventEmitter shared] sendEventWithName:LINK_RECEIVED_EVENT body:@{
         @"url": dynamicLink.url.absoluteString,
         @"minimumAppVersion": dynamicLink.minimumAppVersion == nil ? [NSNull null] : dynamicLink.minimumAppVersion,
+        @"matchType": [[self class] numberWithMatchType:dynamicLink.matchType],
     }];
   }
 
@@ -75,6 +78,22 @@
   return NO;
 }
 
++ (NSNumber *)numberWithMatchType:(FIRDLMatchType)matchType {
+  if (!matchType) {
+    return @0;
+  }
+  switch (matchType) {
+    case FIRDLMatchTypeNone:
+      return @0;
+    case FIRDLMatchTypeWeak:
+      return @1;
+    case FIRDLMatchTypeDefault:
+      return @2;
+    case FIRDLMatchTypeUnique:
+      return @3;
+  }
+}
+
 #pragma mark - User Activities overridden handler methods
 
 - (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity restorationHandler:(void (^)(NSArray *restorableObjects))restorationHandler {
@@ -85,10 +104,12 @@
       if (_initialLinkUrl == nil) {
         _initialLinkUrl = dynamicLink.url.absoluteString;
         _initialLinkMinimumAppVersion = dynamicLink.minimumAppVersion;
+        _initialLinkMatchType =  [[self class] numberWithMatchType:dynamicLink.matchType];
       }
       [[RNFBRCTEventEmitter shared] sendEventWithName:LINK_RECEIVED_EVENT body:@{
           @"url": dynamicLink.url.absoluteString,
           @"minimumAppVersion": dynamicLink.minimumAppVersion == nil ? [NSNull null] : dynamicLink.minimumAppVersion,
+          @"matchType": [[self class] numberWithMatchType:dynamicLink.matchType],
       }];
     }
 
diff --git a/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksModule.m b/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksModule.m
index 8c5fcc6..17ae800 100644
--- a/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksModule.m
+++ b/node_modules/@react-native-firebase/dynamic-links/ios/RNFBDynamicLinks/RNFBDynamicLinksModule.m
@@ -129,11 +129,13 @@ RCT_EXPORT_METHOD(getInitialLink:
       resolve(@{
           @"url": dynamicLink.url.absoluteString,
           @"minimumAppVersion": dynamicLink.minimumAppVersion == nil ? [NSNull null] : dynamicLink.minimumAppVersion,
+          @"matchType": [[self class] numberWithMatchType:dynamicLink.matchType],
       });
     } else if ([RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkUrl != nil) {
       resolve(@{
           @"url": [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkUrl,
           @"minimumAppVersion": [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkMinimumAppVersion == nil ? [NSNull null] : [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkMinimumAppVersion,
+          @"matchType": [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkMatchType,
       });
     } else {
       resolve([NSNull null]);
@@ -151,11 +153,13 @@ RCT_EXPORT_METHOD(getInitialLink:
         resolve(@{
             @"url": dynamicLink.url.absoluteString,
             @"minimumAppVersion": dynamicLink.minimumAppVersion == nil ? [NSNull null] : dynamicLink.minimumAppVersion,
+            @"matchType": [[self class] numberWithMatchType:dynamicLink.matchType],
         });
       } else if (!error && [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkUrl != nil) {
         resolve(@{
             @"url": [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkUrl,
             @"minimumAppVersion": [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkMinimumAppVersion == nil ? [NSNull null] : [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkMinimumAppVersion,
+            @"matchType": [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkMatchType,
         });
       } else if (error) {
         [RNFBSharedUtils rejectPromiseWithUserInfo:reject userInfo:(NSMutableDictionary *) @{
@@ -176,6 +180,7 @@ RCT_EXPORT_METHOD(getInitialLink:
     resolve(@{
         @"url": [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkUrl,
         @"minimumAppVersion": [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkMinimumAppVersion == nil ? [NSNull null] : [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkMinimumAppVersion,
+        @"matchType": [RNFBDynamicLinksAppDelegateInterceptor sharedInstance].initialLinkMatchType,
     });
   } else {
     resolve([NSNull null]);
@@ -192,6 +197,7 @@ RCT_EXPORT_METHOD(resolveLink:
         resolve(@{
             @"url": dynamicLink.url.absoluteString,
             @"minimumAppVersion": dynamicLink.minimumAppVersion == nil ? [NSNull null] : dynamicLink.minimumAppVersion,
+            @"matchType": [[self class] numberWithMatchType:dynamicLink.matchType],
         });
     } else if (!error || (error && [error.localizedDescription containsString:@"dynamicLinks error 404"])) {
       [RNFBSharedUtils rejectPromiseWithUserInfo:reject userInfo:(NSMutableDictionary *) @{
@@ -223,7 +229,6 @@ RCT_EXPORT_METHOD(resolveLink:
   return linkComponents;
 }
 
-
 - (void)buildAnalyticsParameters:(NSDictionary *)analyticsDict components:(FIRDynamicLinkComponents *)linkComponents {
   if (analyticsDict == nil) return;
 
@@ -351,6 +356,21 @@ RCT_EXPORT_METHOD(resolveLink:
   linkComponents.socialMetaTagParameters = socialParams;
 }
 
++ (NSNumber *)numberWithMatchType:(FIRDLMatchType)matchType {
+  if (!matchType) {
+    return @0;
+  }
+  switch (matchType) {
+    case FIRDLMatchTypeNone:
+      return @0;
+    case FIRDLMatchTypeWeak:
+      return @1;
+    case FIRDLMatchTypeDefault:
+      return @2;
+    case FIRDLMatchTypeUnique:
+      return @3;
+  }
+}
 
 - (NSArray<NSString *> *)supportedEvents {
   return @[];
diff --git a/node_modules/@react-native-firebase/dynamic-links/lib/index.d.ts b/node_modules/@react-native-firebase/dynamic-links/lib/index.d.ts
index f1c7c81..a6f10ff 100644
--- a/node_modules/@react-native-firebase/dynamic-links/lib/index.d.ts
+++ b/node_modules/@react-native-firebase/dynamic-links/lib/index.d.ts
@@ -421,6 +421,8 @@ export namespace FirebaseDynamicLinksTypes {
      * On iOS this returns a string value representing the minimum app version (not the iOS system version).
      */
     minimumAppVersion: number | string | null;
+
+    matchType?: number;
   }
 
   /**
